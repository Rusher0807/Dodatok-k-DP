{
  "text": "### Disassembled Code:\n0x00411b3a push 0x60\n0x00411b3c push 0x418178\n0x00411b41 call fcn.00412fe4\n0x00411b46 mov edi, 0x94\n0x00411b4b mov eax, edi\n0x00411b4d call fcn.00413030\n0x00411b52 mov dword [var_18h], esp\n0x00411b55 mov esi, esp\n0x00411b57 mov dword [esi], edi\n0x00411b59 push esi\n0x00411b5a call dword [sym.imp.KERNEL32.dll_GetVersionExA]\n0x00411b60 mov ecx, dword [esi + 0x10]\n0x00411b63 mov dword [0x456cec], ecx\n0x00411b69 mov eax, dword [esi + 4]\n0x00411b6c mov dword [0x456cf8], eax\n0x00411b71 mov edx, dword [esi + 8]\n0x00411b74 mov dword [0x456cfc], edx\n0x00411b7a mov esi, dword [esi + 0xc]\n0x00411b7d and esi, 0x7fff\n0x00411b83 mov dword [0x456cf0], esi\n0x00411b89 cmp ecx, 2\n0x00411b8c je 0x411b9a\n0x00411b8e or esi, 0x8000\n0x00411b94 mov dword [0x456cf0], esi\n0x00411b9a shl eax, 8\n0x00411b9d add eax, edx\n0x00411b9f mov dword [0x456cf4], eax\n0x00411ba4 xor esi, esi\n0x00411ba6 push esi\n0x00411ba7 mov edi, dword [sym.imp.KERNEL32.dll_GetModuleHandleA]\n0x00411bad call edi\n\n### Summary:\nThis block is setting up the stack and calling some functions. It pushes some values onto the stack, then calls a function. It then moves some values around in registers and memory, and calls another function. It then performs some bitwise operations and comparisons, and calls another function. It then performs some more bitwise operations and arithmetic, and calls another function.\n\n### Label:\nbenign",
  "text": "### Disassembled Code:\n0x00411baf cmp word [eax], 0x5a4d\n0x00411bb4 jne 0x411bd5\n0x00411bb6 mov ecx, dword [eax + 0x3c]\n0x00411bb9 add ecx, eax\n0x00411bbb cmp dword [ecx], 0x4550\n0x00411bc1 jne 0x411bd5\n0x00411bc3 movzx eax, word [ecx + 0x18]\n0x00411bc7 cmp eax, 0x10b\n0x00411bcc je 0x411bed\n0x00411bce cmp eax, 0x20b\n0x00411bd3 je 0x411bda\n0x00411bd5 mov dword [var_1ch], esi\n0x00411bd8 jmp 0x411c01\n0x00411bda      83b9840000..   cmp dword [ecx + 0x84], 0xe\n0x00411be1 jbe 0x411bd5\n0x00411be3 xor eax, eax\n0x00411be5 cmp dword [ecx + 0xf8], esi\n0x00411beb jmp 0x411bfb\n0x00411bed cmp dword [ecx + 0x74], 0xe\n0x00411bf1 jbe 0x411bd5\n0x00411bf3 xor eax, eax\n0x00411bf5 cmp dword [ecx + 0xe8], esi\n0x00411bfb setne al\n0x00411bfe mov dword [var_1ch], eax\n0x00411c01 push 1\n0x00411c03 call fcn.00412f90\n0x00411c08 pop ecx\n0x00411c09 test eax, eax\n0x00411c0b jne 0x411c15\n0x00411c0d push 0x1c\n0x00411c0f call fcn.00411b16\n0x00411c14 pop ecx\n\n### Summary:\nThis block is performing some comparisons and conditional jumps. It checks if a value in memory is equal to a certain value, and if it is, it jumps to a different part of the code. It then moves some values around in registers and memory, and performs some more comparisons and conditional jumps. It then calls a function, and checks the result of the function call.\n\n### Label:\nbenign",
  "text": "### Disassembled Code:\n0x00411c15 call fcn.00412f07\n0x00411c1a test eax, eax\n0x00411c1c jne 0x411c26\n0x00411c1e push 0x10\n0x00411c20 call fcn.00411b16\n0x00411c25 pop ecx\n0x00411c26 call fcn.00412df0\n0x00411c2b mov dword [var_4h], esi\n0x00411c2e call fcn.00412bf2\n0x00411c33 test eax, eax\n0x00411c35 jge 0x411c3f\n0x00411c37 push 0x1b\n0x00411c39 call fcn.00411af1\n0x00411c3e pop ecx\n0x00411c3f call dword [sym.imp.KERNEL32.dll_GetCommandLineA]\n0x00411c45 mov dword [0x4574d0], eax\n0x00411c4a call fcn.00412ad0\n0x00411c4f mov dword [0x456cdc], eax\n0x00411c54 call fcn.00412a2e\n0x00411c59 test eax, eax\n0x00411c5b jge 0x411c65\n0x00411c5d push 8\n0x00411c5f call fcn.00411af1\n0x00411c64 pop ecx\n\n### Summary:\nThis block calls a function, checks the result, and conditionally jumps to a different part of the code. It then calls another function, moves some values around in registers and memory, and calls another function. It then checks the result of the function call, and conditionally jumps to a different part of the code. It then calls another function, and moves the result into memory.\n\n### Label:\nbenign"
}