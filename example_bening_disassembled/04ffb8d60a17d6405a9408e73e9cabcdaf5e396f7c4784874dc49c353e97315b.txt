519: entry0 (int64_t arg_150h, int64_t arg_170h)
args(sp[0x130..0x150]) vars(9:sp[0x20..0x170])
0x140006d10 sub rsp, 0x28
0x140006d14 call fcn.140008594
0x140006d19 add rsp, 0x28
0x140006d1d jmp 0x140006afc
0x140006d22 int3
0x140006d23 int3
0x140006d24 int3
0x140006d25 int3
0x140006d26 int3
0x140006d27 int3
0x140006d28 int3
0x140006d29 int3
0x140006d2a int3
0x140006d2b int3
0x140006d2c int3
0x140006d2d int3
0x140006d2e int3
0x140006d2f int3
0x140006d30 int3
0x140006d31 int3
0x140006d32 int3
0x140006d33 int3
0x140006d34 int3
0x140006d35 int3
0x140006d36      66660f1f84..   nop word [rax + rax]
32: fcn.140006d40 (uint32_t arg1)
args(rcx)
0x140006d40      483b0d29a4..   cmp rcx, qword [0x140011170]
0x140006d47 jne 0x140006d5b
0x140006d49 rol rcx, 0x10
0x140006d4d test cx, 0xffff
0x140006d52 jne 0x140006d57
0x140006d54 ret 0
0x140006d57 ror rcx, 0x10
0x140006d5b jmp fcn.1400087a8
0x140006d60 int3
0x140006d61 int3
0x140006d62 int3
0x140006d63 int3
0x140006d64 int3
0x140006d65 int3
0x140006d66 int3
0x140006d67 int3
428: fcn.140006d68 (int64_t arg1, int64_t arg2)
args(rcx, rdx) vars(7:sp[0x10..0x60])
0x140006d68 push rbx
0x140006d6a sub rsp, 0x30
0x140006d6e xor ebx, ebx
0x140006d70 mov r9, rcx
0x140006d73 cmp dword [0x140012fe0], ebx
0x140006d79 jne 0x140006df6
0x140006d7b test rcx, rcx
0x140006d7e jne 0x140006daa
0x140006d80 call fcn.140009658
0x140006d85 xor r9d, r9d
0x140006d88 xor r8d, r8d
0x140006d8b xor edx, edx
0x140006d8d xor ecx, ecx
0x140006d8f mov qword [var_40h], rbx
0x140006d94 mov dword [rax], 0x16
0x140006d9a call fcn.14000974c
0x140006d9f mov eax, 0x7fffffff
0x140006da4 add rsp, 0x30
0x140006da8 pop rbx
0x140006da9 ret
0x140006daa test rdx, rdx
0x140006dad je 0x140006d80
0x140006daf sub r9, rdx
0x140006db2 movzx eax, word [r9 + rdx]
0x140006db7 cmp ax, 0x41
0x140006dbb jb 0x140006dc7
0x140006dbd cmp ax, 0x5a
0x140006dc1 ja 0x140006dc7
0x140006dc3 add ax, 0x20
0x140006dc7 movzx ecx, word [rdx]
0x140006dca cmp cx, 0x41
0x140006dce jb 0x140006dda
0x140006dd0 cmp cx, 0x5a
0x140006dd4 ja 0x140006dda
0x140006dd6 add cx, 0x20
0x140006dda add rdx, 2
0x140006dde test ax, ax
0x140006de1 je 0x140006de8
0x140006de3 cmp ax, cx
0x140006de6 je 0x140006db2
0x140006de8 movzx ecx, cx
0x140006deb movzx eax, ax
0x140006dee sub eax, ecx
0x140006df0 add rsp, 0x30
0x140006df4 pop rbx
0x140006df5 ret
0x140006df6 xor r8d, r8d
0x140006df9 add rsp, 0x30
0x140006dfd pop rbx
0x140006dfe jmp 0x140006e0c
0x140006e03 int3
0x140006e04 int3
0x140006e05 int3
0x140006e06 int3
0x140006e07 int3
0x140006e08 int3
0x140006e09 int3
0x140006e0a int3
0x140006e0b int3
